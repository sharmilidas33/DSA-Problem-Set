class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        sort(nums1.begin(), nums1.end());
        sort(nums2.begin(), nums2.end());
        
        vector<int> result;
        int i = 0, j = 0;
        
        while (i < nums1.size() && j < nums2.size()) {
            if (nums1[i] == nums2[j]) {
                result.push_back(nums1[i]);
                // Move both pointers forward
                i++;
                j++;
                // Avoid duplicate results
                while (i < nums1.size() && nums1[i] == nums1[i - 1]) {
                    i++;
                }
                while (j < nums2.size() && nums2[j] == nums2[j - 1]) {
                    j++;
                }
            } else if (nums1[i] < nums2[j]) {
                // If nums1[i] is smaller, move i forward
                i++;
            } else {
                // If nums2[j] is smaller, move j forward
                j++;
            }
        }
        
        return result;
    }
};
